swagger: '2.0'
info:
  title: Bank Argent API documentation
  description: Contains all available API endpoints in this codebase
  version: '1.0.0'
  termsOfService: 'http://swagger.io/terms/'
host: localhost:3001
basePath: /api/v1
schemes:
  - http
paths:
  /user/login:
    post:
      tags:
        - User Module
      summary: Login
      description: API for Login
      parameters:
        - in: body
          name: body
          description: Login Payload
          required: true
          schema:
            $ref: '#/definitions/Login'
      produces:
        - application/json
      responses:
        '200':
          description: Login Successfully
          schema:
            $ref: '#/definitions/LoginResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/signup:
    post:
      tags:
        - User Module
      summary: Signup
      description: API for Signup
      parameters:
        - in: body
          name: body
          description: Signup Payload
          required: true
          schema:
            $ref: '#/definitions/User'
      produces:
        - application/json
      responses:
        '200':
          description: Signup Successfully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /user/profile:
    post:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for fetching a user profile
      #produces:
       # - application/json
      responses:
        '200':
          description: User profile retrieved successully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
    put:
      security:
        - Bearer: []
      tags:
        - User Module
      summary: User Profile API
      description: API for updating a user profile
      parameters:
        - in: body
          name: body
          description: Update user profile attributes
          required: true
          schema:
            $ref: '#/definitions/UserProfile'
      produces:
        - application/json
      responses:
        '200':
          description: User profile retrieved successully
          schema:
            $ref: '#/definitions/ApiResponse'
        '400':
          description: Invalid Fields
        '500':
          description: Internal Server Error
  /users/{userId}/accounts:
    security:
      - Bearer: []
    get:
      tags:
        - Accounts modules
      summary: User Accounts API
      description: API for getting an user's accounts
      parameters:
        - name: userId
          in: path
          description: The user's ID
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Return an array of an user's accounts
          content: 
            application/json:
              schema: 
                type: array
                items: 
                  $ref: "#/definitions/UserAccount"
        '400':
          description: Bad request
        '500':
          description: Internal Server Error
  /users/{userId}/accounts/{accountId}:
    get: 
      security:
        - Bearer: []
      tags: 
        - Accounts modules
      summary: User Accounts API
        description: API for getting an user's account
        parameters:
          - name: userId
            in: path
            description: The user's ID
            required: true
            schema:
              type: string
          - name: accountId
            in: path
            description: The user's ID
            required: true
            schema:
              type: string
        responses:
          "200":
            description: Return an user's account
            content:
              application/json:
                schema:
                  $ref: "#/definitions/UserAccount"
          '400':
            description: Bad request
          '404':
            description: Accounts not found
            content: {}
          '500':
            description: Internal Server Error
  /users/{userId}/accounts/{accountId}/transactions:
    get:
  /users/{userId}/accounts/{accountId}/transactions/{transactionId}:
    put:
      (...)
      requestBody:
        content:
          appplication/json:
            schema:
              type: object
              properties:
                category: 
                  type: string
                  example: Utilities
                note:
                  type: string
                  example: Invoice EDF
      (...)

securityDefinitions:
  Bearer:
    type: apiKey
    name: Authorization
    in: header
definitions:
  User:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
      firstName:
        type: string
        description: user first name
      lastName:
        type: string
        description: user last name
      userName:
        type: string
        description: user public name
  Login:
    properties:
      email:
        type: string
        description: user email
      password:
        type: string
        description: user password
  ApiResponse:
    type: object
    properties:
      status:
        type: integer
      message:
        type: string
      body:
        type: object
        properties:
          id:
            type: string
          email:
            type: string
  LoginResponse:
    type: object
    properties:
      token:
        type: string
  UserProfile:
    type: object
    properties:
      userName:
        type: string
  UserAccount:
    type: object
    properties:
      id:
        type: string
        description: The account's ID
        example: "1"
      name:
        type: string
        description: The account's name
        example: Argent Bank Checking
      number:
        type: string
        description: The account's number
        example: x3448
      balance: 
        type: number
        description: The account's balance
        example: 48098.43
  Transaction:
    type: object
    properties:
      id:
        type: string
        description: The transaction's id
        example: "1"
      date:
      description:
      amount:
      balance:
      type:
      category:
      note:

